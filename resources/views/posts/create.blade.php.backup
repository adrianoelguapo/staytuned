<x-app-layout>
    @push('styles')
    <link href="{{ asset('css/dashboard.css') }}" rel="stylesheet">
    <link href="{{ asset('css/posts.css') }}" rel="stylesheet">
    @endpush

    <nav class="navbar navbar-expand-lg px-5 py-3">
        <div class="d-flex align-items-center">
            <!-- Offcanvas toggle: solo <lg -->
            <button class="btn btn-link btn-offcanvas me-3 p-0 d-lg-none" type="button"
                    data-bs-toggle="offcanvas"
                    data-bs-target="#offcanvasMenu"
                    aria-controls="offcanvasMenu">
                <i class="bi bi-list text-white fs-3"></i>
            </button>
            <a class="navbar-brand text-white fw-bold" href="{{ url('dashboard') }}">
                StayTuned
            </a>
        </div>

        <div class="d-none d-lg-flex ms-auto align-items-center gap-3">
            <a href="{{ route('dashboard') }}" class="nav-link-inline">Dashboard</a>
            <a href="{{ route('explore.users.index') }}" class="nav-link-inline">Explorar usuarios</a>
            <a href="{{ route('playlists.index') }}" class="nav-link-inline">Mis playlists</a>
            <a href="{{ route('posts.index') }}" class="nav-link-inline active">Publicaciones</a>
            <a href="#" class="nav-link-inline">Mis comunidades</a>

            <div class="dropdown">
                <a class="d-flex align-items-center text-white dropdown-toggle nav-link-inline"
                   href="#"
                   id="userDropdown"
                   role="button"
                   data-bs-toggle="dropdown"
                   aria-expanded="false">
                    @if(Laravel\Jetstream\Jetstream::managesProfilePhotos())
                        <img src="{{ Auth::user()->profile_photo_url }}"
                             class="rounded-circle me-2 user-photo"
                             alt="{{ Auth::user()->name }}" />
                    @endif
                    {{ Auth::user()->username }}
                </a>
                <ul class="dropdown-menu dropdown-menu-end">
                    <li>
                        <a class="dropdown-item d-flex align-items-center" href="{{ route('profile.settings') }}">
                            <i class="bi bi-person me-2"></i> Perfil
                        </a>
                    </li>
                    <li><hr class="dropdown-divider"></li>
                    <li>
                        <form method="POST" action="{{ route('logout') }}">
                            @csrf
                            <button type="submit"
                                    class="dropdown-item d-flex align-items-center text-danger">
                                <i class="bi bi-box-arrow-right me-2"></i> Cerrar sesión
                            </button>
                        </form>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Offcanvas menu (para <lg) -->
    <div class="offcanvas offcanvas-start" tabindex="-1" id="offcanvasMenu" aria-labelledby="offcanvasMenuLabel">
        <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="offcanvasMenuLabel">StayTuned</h5>
            <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Cerrar"></button>
        </div>
        <div class="offcanvas-body d-flex flex-column p-0">
            <nav class="nav flex-column">
                <a class="nav-link" href="{{ route('dashboard') }}">Dashboard</a>
                <a class="nav-link" href="{{ route('explore.users.index') }}">Explorar usuarios</a>
                <a class="nav-link" href="{{ route('playlists.index') }}">Mis playlists</a>
                <a class="nav-link active" href="{{ route('posts.index') }}">Publicaciones</a>
                <a class="nav-link" href="#">Mis comunidades</a>
            </nav>
            <hr class="my-0">
            <nav class="nav flex-column">
                <a class="nav-link d-flex align-items-center" href="{{ route('profile.settings') }}">
                    <i class="bi bi-person me-2"></i> Perfil
                </a>
                <form method="POST" action="{{ route('logout') }}">
                    @csrf
                    <button type="submit"
                            class="nav-link btn btn-link d-flex align-items-center text-danger rounded-0">
                        <i class="bi bi-box-arrow-right me-2"></i> Cerrar sesión
                    </button>
                </form>
            </nav>
        </div>
    </div>

    <!-- Contenido principal -->
    <main class="posts-container">
        <!-- Cabecera -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1 class="posts-title">Nueva Publicación</h1>
            <a href="{{ route('posts.index') }}" class="btn-secondary">
                <i class="bi bi-arrow-left"></i>
                Volver
            </a>
        </div>

        <!-- Formulario -->
        <div class="form-container">
            <form method="POST" action="{{ route('posts.store') }}" id="postForm">
                @csrf
                
                <!-- Título -->
                <div class="mb-3">
                    <label for="title" class="form-label">Título</label>
                    <input type="text" 
                           class="form-control @error('title') is-invalid @enderror" 
                           id="title" 
                           name="title" 
                           value="{{ old('title') }}" 
                           placeholder="Escribe el título de tu publicación"
                           required>
                    @error('title')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>

                <!-- Descripción -->
                <div class="mb-3">
                    <label for="description" class="form-label">Descripción</label>
                    <textarea class="form-control @error('description') is-invalid @enderror" 
                              id="description" 
                              name="description" 
                              rows="4" 
                              placeholder="Describe tu publicación...">{{ old('description') }}</textarea>
                    @error('description')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>

                <!-- Categoría -->
                <div class="mb-3">
                    <label for="category_id" class="form-label">Categoría</label>
                    <select class="form-control @error('category_id') is-invalid @enderror" 
                            id="category_id" 
                            name="category_id" 
                            required>
                        <option value="">Selecciona una categoría</option>
                        @foreach($categories as $category)
                            <option value="{{ $category->id }}" {{ old('category_id') == $category->id ? 'selected' : '' }}>
                                {{ $category->text }}
                            </option>
                        @endforeach
                    </select>
                    @error('category_id')
                        <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>

                <!-- Búsqueda de Spotify -->
                <div class="spotify-search">
                    <label class="form-label">Contenido de Spotify (Opcional)</label>
                    <p class="text-white-50 small mb-3">Busca y selecciona música de Spotify para enriquecer tu publicación</p>
                    
                    <div class="mb-3">
                        <div class="input-group">
                            <select class="form-control" id="searchType">
                                <option value="track">Canciones</option>
                                <option value="artist">Artistas</option>
                                <option value="album">Álbumes</option>
                                <option value="playlist">Playlists</option>
                            </select>
                            <input type="text" 
                                   class="form-control" 
                                   id="spotifySearch" 
                                   placeholder="Buscar en Spotify...">
                            <button class="btn btn-primary" type="button" onclick="searchSpotify()">
                                <i class="bi bi-search"></i>
                            </button>
                        </div>
                    </div>

                    <!-- Resultados de búsqueda -->
                    <div id="spotifyResults" class="spotify-results" style="display: none;"></div>
                    
                    <!-- Elemento seleccionado -->
                    <div id="selectedSpotify" style="display: none;" class="mt-3">
                        <h6 class="text-white">Seleccionado:</h6>
                        <div id="selectedSpotifyContent" class="spotify-item selected"></div>
                        <button type="button" class="btn btn-secondary btn-sm mt-2" onclick="clearSelection()">
                            <i class="bi bi-x"></i> Quitar selección
                        </button>
                    </div>
                </div>

                <!-- Campos ocultos para Spotify -->
                <input type="hidden" name="spotify_id" id="spotify_id">
                <input type="hidden" name="spotify_type" id="spotify_type">
                <input type="hidden" name="spotify_external_url" id="spotify_external_url">
                <input type="hidden" name="spotify_data" id="spotify_data">

                <!-- Botones -->
                <div class="d-flex gap-3 mt-4">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-check-lg"></i>
                        Crear Publicación
                    </button>
                    <a href="{{ route('posts.index') }}" class="btn btn-secondary">
                        <i class="bi bi-x-lg"></i>
                        Cancelar
                    </a>
                </div>
            </form>
        </div>
    </main>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        let searchTimeout;
        let selectedSpotifyItem = null;

        // Búsqueda con debounce
        document.getElementById('spotifySearch').addEventListener('input', function() {
            clearTimeout(searchTimeout);
            const query = this.value.trim();
            
            if (query.length >= 2) {
                searchTimeout = setTimeout(() => {
                    searchSpotify();
                }, 500);
            } else {
                document.getElementById('spotifyResults').style.display = 'none';
            }
        });

        function searchSpotify() {
            const query = document.getElementById('spotifySearch').value.trim();
            const type = document.getElementById('searchType').value;
            
            if (query.length < 2) return;

            const resultsContainer = document.getElementById('spotifyResults');
            resultsContainer.innerHTML = '<div class="text-center p-3"><i class="bi bi-hourglass-split"></i> Buscando...</div>';
            resultsContainer.style.display = 'block';

            fetch(`/posts/search-spotify?q=${encodeURIComponent(query)}&type=${type}`)
                .then(response => response.json())
                .then(data => {
                    displaySpotifyResults(data.items || []);
                })
                .catch(error => {
                    console.error('Error:', error);
                    resultsContainer.innerHTML = '<div class="text-center p-3 text-danger">Error en la búsqueda</div>';
                });
        }

        function displaySpotifyResults(items) {
            const container = document.getElementById('spotifyResults');
            
            if (items.length === 0) {
                container.innerHTML = '<div class="text-center p-3">No se encontraron resultados</div>';
                return;
            }

            container.innerHTML = items.map(item => {
                let imageUrl = '';
                let subtitle = '';
                
                if (item.images && item.images.length > 0) {
                    imageUrl = item.images[0].url;
                } else if (item.album && item.album.images && item.album.images.length > 0) {
                    imageUrl = item.album.images[0].url;
                }

                switch (item.type) {
                    case 'track':
                        subtitle = item.artists ? item.artists.map(a => a.name).join(', ') : '';
                        break;
                    case 'album':
                        subtitle = item.artists ? item.artists.map(a => a.name).join(', ') : '';
                        break;
                    case 'artist':
                        subtitle = `${item.followers ? item.followers.total.toLocaleString() : 0} seguidores`;
                        break;
                    case 'playlist':
                        subtitle = `${item.tracks ? item.tracks.total : 0} canciones`;
                        break;
                }

                return `
                    <div class="spotify-item" onclick="selectSpotifyItem('${item.id}', '${item.type}', '${item.external_urls.spotify}', '${encodeURIComponent(JSON.stringify(item))}')">
                        <div class="d-flex align-items-center">
                            ${imageUrl ? `<img src="${imageUrl}" class="me-3" style="width: 50px; height: 50px; border-radius: 4px; object-fit: cover;">` : '<div class="me-3" style="width: 50px; height: 50px; background: rgba(255,255,255,0.1); border-radius: 4px;"></div>'}
                            <div>
                                <div class="fw-bold text-white">${item.name}</div>
                                <div class="text-white-50 small">${subtitle}</div>
                            </div>
                        </div>
                    </div>
                `;
            }).join('');
        }

        function selectSpotifyItem(id, type, externalUrl, encodedData) {
            selectedSpotifyItem = JSON.parse(decodeURIComponent(encodedData));
            
            // Llenar campos ocultos
            document.getElementById('spotify_id').value = id;
            document.getElementById('spotify_type').value = type;
            document.getElementById('spotify_external_url').value = externalUrl;
            document.getElementById('spotify_data').value = JSON.stringify(selectedSpotifyItem);

            // Mostrar selección
            let imageUrl = '';
            let subtitle = '';
            
            if (selectedSpotifyItem.images && selectedSpotifyItem.images.length > 0) {
                imageUrl = selectedSpotifyItem.images[0].url;
            } else if (selectedSpotifyItem.album && selectedSpotifyItem.album.images && selectedSpotifyItem.album.images.length > 0) {
                imageUrl = selectedSpotifyItem.album.images[0].url;
            }

            switch (type) {
                case 'track':
                    subtitle = selectedSpotifyItem.artists ? selectedSpotifyItem.artists.map(a => a.name).join(', ') : '';
                    break;
                case 'album':
                    subtitle = selectedSpotifyItem.artists ? selectedSpotifyItem.artists.map(a => a.name).join(', ') : '';
                    break;
                case 'artist':
                    subtitle = `${selectedSpotifyItem.followers ? selectedSpotifyItem.followers.total.toLocaleString() : 0} seguidores`;
                    break;
                case 'playlist':
                    subtitle = `${selectedSpotifyItem.tracks ? selectedSpotifyItem.tracks.total : 0} canciones`;
                    break;
            }

            document.getElementById('selectedSpotifyContent').innerHTML = `
                <div class="d-flex align-items-center">
                    <i class="bi bi-spotify spotify-icon fs-4 me-3"></i>
                    ${imageUrl ? `<img src="${imageUrl}" class="me-3" style="width: 50px; height: 50px; border-radius: 4px; object-fit: cover;">` : ''}
                    <div>
                        <div class="fw-bold text-white">${selectedSpotifyItem.name}</div>
                        <div class="text-white-50 small">${subtitle}</div>
                    </div>
                </div>
            `;

            document.getElementById('selectedSpotify').style.display = 'block';
            document.getElementById('spotifyResults').style.display = 'none';
            document.getElementById('spotifySearch').value = '';
        }

        function clearSelection() {
            selectedSpotifyItem = null;
            document.getElementById('spotify_id').value = '';
            document.getElementById('spotify_type').value = '';
            document.getElementById('spotify_external_url').value = '';
            document.getElementById('spotify_data').value = '';
            document.getElementById('selectedSpotify').style.display = 'none';        }
    </script>
                        </div>

                        <!-- Buscador de Spotify -->
                        <div class="border-t pt-6">
                            <h3 class="text-lg font-medium text-gray-900 mb-4">Buscar en Spotify (opcional)</h3>
                            
                            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">                                <div>
                                    <label for="spotify_type" class="block text-sm font-medium text-gray-700">Tipo</label>
                                    <select id="spotify_type" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                                        <option value="track">Canción</option>
                                        <option value="artist">Artista</option>
                                        <option value="album">Álbum</option>
                                        <option value="playlist">Playlist</option>
                                    </select>
                                </div>
                                
                                <div class="md:col-span-2">
                                    <label for="spotify_search" class="block text-sm font-medium text-gray-700">Buscar</label>
                                    <div class="mt-1 flex rounded-md shadow-sm">
                                        <input type="text" id="spotify_search" 
                                               class="flex-1 block w-full border-gray-300 rounded-l-md focus:ring-blue-500 focus:border-blue-500"
                                               placeholder="Buscar en Spotify...">
                                        <button type="button" id="search_spotify_btn" 
                                                class="relative -ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500">
                                            Buscar
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <!-- Resultados de búsqueda -->
                            <div id="spotify_results" class="mt-4 hidden">
                                <h4 class="text-sm font-medium text-gray-700 mb-2">Resultados:</h4>
                                <div id="spotify_results_container" class="space-y-2 max-h-60 overflow-y-auto">
                                    <!-- Los resultados se cargarán aquí -->
                                </div>
                            </div>

                            <!-- Contenido seleccionado -->
                            <div id="selected_spotify" class="mt-4 hidden">
                                <h4 class="text-sm font-medium text-gray-700 mb-2">Contenido seleccionado:</h4>
                                <div id="selected_spotify_container" class="p-4 bg-green-50 rounded-lg border-l-4 border-green-400">
                                    <!-- El contenido seleccionado se mostrará aquí -->
                                </div>
                                <button type="button" id="remove_spotify" class="mt-2 text-sm text-red-600 hover:text-red-800">
                                    Quitar selección
                                </button>
                            </div>

                            <!-- Campos ocultos para Spotify -->
                            <input type="hidden" name="spotify_id" id="spotify_id">
                            <input type="hidden" name="spotify_type" id="spotify_type_hidden">
                        </div>

                        <!-- Botones -->
                        <div class="flex items-center justify-end space-x-4 pt-6 border-t">
                            <a href="{{ route('posts.index') }}" 
                               class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                                Cancelar
                            </a>
                            <button type="submit" 
                                    class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                                Crear Publicación
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    @push('scripts')
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const searchBtn = document.getElementById('search_spotify_btn');
            const searchInput = document.getElementById('spotify_search');
            const typeSelect = document.getElementById('spotify_type');
            const resultsContainer = document.getElementById('spotify_results');
            const resultsContent = document.getElementById('spotify_results_container');
            const selectedContainer = document.getElementById('selected_spotify');
            const selectedContent = document.getElementById('selected_spotify_container');
            const removeBtn = document.getElementById('remove_spotify');
            const spotifyIdInput = document.getElementById('spotify_id');
            const spotifyTypeInput = document.getElementById('spotify_type_hidden');

            // Función para buscar en Spotify
            function searchSpotify() {
                const query = searchInput.value.trim();
                const type = typeSelect.value;

                if (!query) {
                    alert('Por favor ingresa un término de búsqueda');
                    return;
                }

                searchBtn.textContent = 'Buscando...';
                searchBtn.disabled = true;

                fetch(`{{ route('posts.search.spotify') }}?query=${encodeURIComponent(query)}&type=${type}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.error) {
                            alert('Error al buscar en Spotify: ' + data.error);
                            return;
                        }

                        displayResults(data.results, data.type);
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('Error al buscar en Spotify');
                    })
                    .finally(() => {
                        searchBtn.textContent = 'Buscar';
                        searchBtn.disabled = false;
                    });
            }

            // Función para mostrar resultados
            function displayResults(results, type) {
                resultsContent.innerHTML = '';

                if (results.length === 0) {
                    resultsContent.innerHTML = '<p class="text-gray-500 text-sm">No se encontraron resultados</p>';
                    resultsContainer.classList.remove('hidden');
                    return;
                }

                results.forEach(item => {
                    const resultDiv = document.createElement('div');
                    resultDiv.className = 'flex items-center space-x-3 p-3 border rounded-lg cursor-pointer hover:bg-gray-50';
                    
                    let imageUrl = '';
                    let title = item.name;
                    let subtitle = '';

                    if (type === 'track') {
                        imageUrl = item.album?.images?.[0]?.url || '';
                        subtitle = item.artists?.map(artist => artist.name).join(', ') || '';
                    } else if (type === 'artist' || type === 'album') {
                        imageUrl = item.images?.[0]?.url || '';
                        if (type === 'album') {
                            subtitle = item.artists?.map(artist => artist.name).join(', ') || '';
                        }
                    }

                    resultDiv.innerHTML = `
                        <div class="flex-shrink-0">
                            ${imageUrl ? `<img src="${imageUrl}" alt="${title}" class="w-12 h-12 object-cover rounded">` : '<div class="w-12 h-12 bg-gray-200 rounded"></div>'}
                        </div>
                        <div class="flex-1 min-w-0">
                            <p class="text-sm font-medium text-gray-900 truncate">${title}</p>
                            ${subtitle ? `<p class="text-sm text-gray-500 truncate">${subtitle}</p>` : ''}
                        </div>
                    `;

                    resultDiv.addEventListener('click', () => selectSpotifyItem(item, type));
                    resultsContent.appendChild(resultDiv);
                });

                resultsContainer.classList.remove('hidden');
            }

            // Función para seleccionar un elemento
            function selectSpotifyItem(item, type) {
                spotifyIdInput.value = item.id;
                spotifyTypeInput.value = type;

                let imageUrl = '';
                let title = item.name;
                let subtitle = '';

                if (type === 'track') {
                    imageUrl = item.album?.images?.[0]?.url || '';
                    subtitle = item.artists?.map(artist => artist.name).join(', ') || '';
                } else if (type === 'artist' || type === 'album') {
                    imageUrl = item.images?.[0]?.url || '';
                    if (type === 'album') {
                        subtitle = item.artists?.map(artist => artist.name).join(', ') || '';
                    }
                }

                selectedContent.innerHTML = `
                    <div class="flex items-center space-x-3">
                        <div class="flex-shrink-0">
                            ${imageUrl ? `<img src="${imageUrl}" alt="${title}" class="w-16 h-16 object-cover rounded">` : '<div class="w-16 h-16 bg-gray-200 rounded"></div>'}
                        </div>
                        <div class="flex-1">
                            <p class="font-medium text-gray-900">${title}</p>
                            ${subtitle ? `<p class="text-sm text-gray-600">${subtitle}</p>` : ''}
                            <p class="text-xs text-gray-500">${type === 'track' ? 'Canción' : type === 'artist' ? 'Artista' : 'Álbum'}</p>
                        </div>
                    </div>
                `;

                selectedContainer.classList.remove('hidden');
                resultsContainer.classList.add('hidden');
                searchInput.value = '';
            }

            // Función para quitar selección
            function removeSelection() {
                spotifyIdInput.value = '';
                spotifyTypeInput.value = '';
                selectedContainer.classList.add('hidden');
                selectedContent.innerHTML = '';
            }

            // Event listeners
            searchBtn.addEventListener('click', searchSpotify);
            searchInput.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    e.preventDefault();
                    searchSpotify();
                }
            });
            removeBtn.addEventListener('click', removeSelection);
        });
    </script>
    @endpush
</x-app-layout>
